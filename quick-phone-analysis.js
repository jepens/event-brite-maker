// Quick analysis of phone numbers
const phones = [
  '08128351406', '08158835728', '0895328708034', '081219055159', '08161923257',
  '081909010759', '08111373343', '081323920006', '081586535488', '08129534855',
  '085693412767', '087788534882', '085771266053', '081808511166', '08161908613',
  '08811298405', '081315559199', '081317585373', '087860111177', '081318757230',
  '0816703115', '081805254558', '081578896577', '081365393376', '08129356787',
  '081298967699', '081342969239', '082213276726', '087781969050', '085776063286',
  '08111702808', '0817191117', '081213675730', '08161447295', '082110174632',
  '08128194654', '082208239992', '08158859966', '081511492910', '08118114986',
  '081218680962', '087880986953', '087889092999', '0818427376', '08121053401',
  '08561015028', '08121220260', '081290429053', '08113038279', '085691213697',
  '081315450295', '081212122186', '08158978880', '08978249795', '085161141312',
  '08989231747', '085640892120', '081317747989', '082185629649', '081284523700',
  '0818198193', '085729512679', '081287552597', '081388323270', '081298192148',
  '0813233488496', '081905055397', '087765973071', '08999085989', '081390291953',
  '08119629996', '081808189779', '085717283637', '0816750560', '0818880593',
  '0818192683', '087812312310', '08158830827', '081380095600', '08567867724',
  '081318207438', '08561999600', '0816980036', '082111229029', '087888776100',
  '081286809765', '085959202192', '08111082423', '08159170978', '62816721116',
  '08159336180', '081310339455', '08112281628', '082122036092', '081806018293',
  '08128223326', '085175051697', '08118771277', '081320480526', '081296475101',
  '0818677776', '081231667241', '08118077794', '085288850508', '081298184607',
  '083874169334', '081287732152', '08161600060', '081285096994', '081293716116',
  '085716150068', '081807811487', '08176671883', '08197561575', '081287561092',
  '085274415500', '087725402220', '08123891999', '081295523995', '085156715869',
  '081311341234', '081314545317', '085715337369', '087777007582', '08551122113',
  '081213710006', '08119999356', '085882640106', '082114145547', '081212340257',
  '087878169773', '082111311951', '0817737077', '081287519128', '081288000916',
  '08121000090', '081281289499', '085883147431', '082136436622', '081519459797',
  '0812 977 8705', '08111288266', '081905857574', '081388122192', '08111634170',
  '081221809355', '087876992805', '085778554535', '081294040144', '081399424239',
  '0818727932', '085262424370', '085695755232', '081218061936', '081295304012',
  '081286861585', '081282248342', '087781802925', '0817881138', '0818730393',
  '082114175038', '081574038889', '08111929468', '08161123179', '0816777669',
  '08170013680', '085714338648', '081808430284', '081329083576', '08161962638',
  '082210113221', '087888865872', '08983312921', '085311996296', '081315732959',
  '085719452785', '08563136261', '08118770050', '081314524580', '085286458867',
  '081510008231', '081808232808', '08129296866', '081298236634', '08176700868',
  '081287179165', '081286153722', '085218556546', '087880336489', '082383568472',
  '085697638100', '087776111135', '0811801402', '08129954800', '08121404545',
  '08161613100', '081386256625', '087781256327', '081111801623', '082298532020',
  '08159936319', '081289785928', '081212772247', '085692829477', '087871049689',
  '087855819353', '085159090009', '081288698425', '081219102021', '08567718737',
  '081517169797', '081288618651', '087716103813', '087780483453', '081267438093',
  '087777888078', '081388373009', '08119000591', '08122028035', '081585555819',
  '08161885667', '081288000531', '085714116719', '081917091107', '089636392629',
  '089616789350', '0818928609', '08158200053', '081514311833', '081210699218',
  '08558205771', '08159356887'
];

console.log('📱 Phone Number Analysis');
console.log(`Total numbers: ${phones.length}\n`);

let stats = {
  '628xxxxxxxxxx': 0, // 13 digits, starts with 62
  '08xxxxxxxxxx': 0,  // 12 digits, starts with 08
  '08xxxxxxxxx': 0,   // 11 digits, starts with 08
  '8xxxxxxxxx': 0,    // 11 digits, starts with 8
  'xxxxxxxxxx': 0,    // 10 digits
  'other': 0          // other formats
};

let invalid = [];

phones.forEach((phone, i) => {
  const digitsOnly = phone.replace(/\D/g, '');
  const length = digitsOnly.length;
  const prefix = digitsOnly.substring(0, 2);
  
  if (prefix === '62' && length === 13) {
    stats['628xxxxxxxxxx']++;
    console.log(`✅ ${i+1}. ${phone} → ${digitsOnly} (628xxxxxxxxxx)`);
  } else if (prefix === '08' && length === 12) {
    stats['08xxxxxxxxxx']++;
    console.log(`✅ ${i+1}. ${phone} → 62${digitsOnly.substring(1)} (08xxxxxxxxxx)`);
  } else if (prefix === '08' && length === 11) {
    stats['08xxxxxxxxx']++;
    console.log(`✅ ${i+1}. ${phone} → 62${digitsOnly.substring(1)} (08xxxxxxxxx)`);
  } else if (prefix === '8' && length === 11) {
    stats['8xxxxxxxxx']++;
    console.log(`✅ ${i+1}. ${phone} → 62${digitsOnly} (8xxxxxxxxx)`);
  } else if (length === 10) {
    stats['xxxxxxxxxx']++;
    console.log(`✅ ${i+1}. ${phone} → 628${digitsOnly} (xxxxxxxxxx)`);
  } else {
    stats['other']++;
    invalid.push(phone);
    console.log(`❌ ${i+1}. ${phone} → INVALID (${length} digits, starts with ${prefix})`);
  }
});

console.log('\n📊 STATISTICS:');
Object.entries(stats).forEach(([format, count]) => {
  if (count > 0) {
    console.log(`${format}: ${count} numbers`);
  }
});

if (invalid.length > 0) {
  console.log(`\n❌ INVALID NUMBERS (${invalid.length}):`);
  invalid.forEach(phone => {
    const digitsOnly = phone.replace(/\D/g, '');
    console.log(`- ${phone} (${digitsOnly.length} digits, starts with: ${digitsOnly.substring(0, 2)})`);
  });
} else {
  console.log('\n🎉 All phone numbers are valid!');
}
