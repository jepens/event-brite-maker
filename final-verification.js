// Final verification of all phone numbers
const phones = [
  '08128351406', '08158835728', '0895328708034', '081219055159', '08161923257',
  '081909010759', '08111373343', '081323920006', '081586535488', '08129534855',
  '085693412767', '087788534882', '085771266053', '081808511166', '08161908613',
  '08811298405', '081315559199', '081317585373', '087860111177', '081318757230',
  '0816703115', '081805254558', '081578896577', '081365393376', '08129356787',
  '081298967699', '081342969239', '082213276726', '087781969050', '085776063286',
  '08111702808', '0817191117', '081213675730', '08161447295', '082110174632',
  '08128194654', '082208239992', '08158859966', '081511492910', '08118114986',
  '081218680962', '087880986953', '087889092999', '0818427376', '08121053401',
  '08561015028', '08121220260', '081290429053', '08113038279', '085691213697',
  '081315450295', '081212122186', '08158978880', '08978249795', '085161141312',
  '08989231747', '085640892120', '081317747989', '082185629649', '081284523700',
  '0818198193', '085729512679', '081287552597', '081388323270', '081298192148',
  '0813233488496', '081905055397', '087765973071', '08999085989', '081390291953',
  '08119629996', '081808189779', '085717283637', '0816750560', '0818880593',
  '0818192683', '087812312310', '08158830827', '081380095600', '08567867724',
  '081318207438', '08561999600', '0816980036', '082111229029', '087888776100',
  '081286809765', '085959202192', '08111082423', '08159170978', '62816721116',
  '08159336180', '081310339455', '08112281628', '082122036092', '081806018293',
  '08128223326', '085175051697', '08118771277', '081320480526', '081296475101',
  '0818677776', '081231667241', '08118077794', '085288850508', '081298184607',
  '083874169334', '081287732152', '08161600060', '081285096994', '081293716116',
  '085716150068', '081807811487', '08176671883', '08197561575', '081287561092',
  '085274415500', '087725402220', '08123891999', '081295523995', '085156715869',
  '081311341234', '081314545317', '085715337369', '087777007582', '08551122113',
  '081213710006', '08119999356', '085882640106', '082114145547', '081212340257',
  '087878169773', '082111311951', '0817737077', '081287519128', '081288000916',
  '08121000090', '081281289499', '085883147431', '082136436622', '081519459797',
  '0812 977 8705', '08111288266', '081905857574', '081388122192', '08111634170',
  '081221809355', '087876992805', '085778554535', '081294040144', '081399424239',
  '0818727932', '085262424370', '085695755232', '081218061936', '081295304012',
  '081286861585', '081282248342', '087781802925', '0817881138', '0818730393',
  '082114175038', '081574038889', '08111929468', '08161123179', '0816777669',
  '08170013680', '085714338648', '081808430284', '081329083576', '08161962638',
  '082210113221', '087888865872', '08983312921', '085311996296', '081315732959',
  '085719452785', '08563136261', '08118770050', '081314524580', '085286458867',
  '081510008231', '081808232808', '08129296866', '081298236634', '08176700868',
  '081287179165', '081286153722', '085218556546', '087880336489', '082383568472',
  '085697638100', '087776111135', '0811801402', '08129954800', '08121404545',
  '08161613100', '081386256625', '087781256327', '081111801623', '082298532020',
  '08159936319', '081289785928', '081212772247', '085692829477', '087871049689',
  '087855819353', '085159090009', '081288698425', '081219102021', '08567718737',
  '081517169797', '081288618651', '087716103813', '087780483453', '081267438093',
  '087777888078', '081388373009', '08119000591', '08122028035', '081585555819',
  '08161885667', '081288000531', '085714116719', '081917091107', '089636392629',
  '089616789350', '0818928609', '08158200053', '081514311833', '081210699218',
  '08558205771', '08159356887'
];

function validatePhoneNumber(phone) {
  if (!phone || typeof phone !== 'string' || phone.trim() === '') {
    return false;
  }
  
  const cleanPhone = phone.trim();
  const digitsOnly = cleanPhone.replace(/\D/g, '');
  
  if (digitsOnly.startsWith('62') && (digitsOnly.length === 13 || digitsOnly.length === 11)) {
    return true;
  }
  
  if (digitsOnly.startsWith('08') && (digitsOnly.length >= 10 && digitsOnly.length <= 13)) {
    return true;
  }
  
  if (digitsOnly.startsWith('8') && digitsOnly.length === 11) {
    return true;
  }
  
  if (digitsOnly.length === 10 && !digitsOnly.startsWith('0') && !digitsOnly.startsWith('8')) {
    return true;
  }
  
  return false;
}

console.log('🔍 Final Verification of All Phone Numbers\n');

let validCount = 0;
let invalidCount = 0;
let invalidNumbers = [];

phones.forEach((phone, index) => {
  const isValid = validatePhoneNumber(phone);
  if (isValid) {
    validCount++;
    console.log(`✅ ${index + 1}. ${phone}`);
  } else {
    invalidCount++;
    invalidNumbers.push(phone);
    console.log(`❌ ${index + 1}. ${phone}`);
  }
});

console.log('\n📊 FINAL RESULTS:');
console.log(`Total numbers: ${phones.length}`);
console.log(`Valid numbers: ${validCount}`);
console.log(`Invalid numbers: ${invalidCount}`);
console.log(`Success rate: ${((validCount / phones.length) * 100).toFixed(1)}%`);

if (invalidNumbers.length === 0) {
  console.log('\n🎉 SUCCESS! All phone numbers are now valid!');
  console.log('✅ Validation covers all formats in your database');
} else {
  console.log('\n❌ Still have invalid numbers:');
  invalidNumbers.forEach(phone => {
    const digitsOnly = phone.replace(/\D/g, '');
    console.log(`- ${phone} (${digitsOnly.length} digits, starts with: ${digitsOnly.substring(0, 2)})`);
  });
}

console.log('\n📋 SUPPORTED FORMATS:');
console.log('✅ 628xxxxxxxxxx (13 digits) - Already correct format');
console.log('✅ 628xxxxxxxxx (11 digits) - Already correct format');
console.log('✅ 08xxxxxxxx (10 digits) - Will be converted to 628xxxxxxxxxx');
console.log('✅ 08xxxxxxxxx (11 digits) - Will be converted to 628xxxxxxxxxx');
console.log('✅ 08xxxxxxxxxx (12 digits) - Will be converted to 628xxxxxxxxxx');
console.log('✅ 08xxxxxxxxxxx (13 digits) - Will be converted to 628xxxxxxxxxx');
console.log('✅ 8xxxxxxxxx (11 digits) - Will be converted to 628xxxxxxxxxx');
console.log('✅ xxxxxxxxxx (10 digits) - Will be converted to 628xxxxxxxxxx');
console.log('✅ Supports: spaces, dashes, plus signs, and other separators');
